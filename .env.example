# ================================
# DEUSEDA Environment Configuration
# ================================
# Copy this file to .env and fill in your values
# For production, use secure secrets management

# ================================
# Application Identity
# ================================
APP_NAME=deuseda
PROJECT_NAME=deuseda

# ================================
# Domain Configuration
# ================================
# Primary domain (e.g., example.com)
APEX_DOMAIN=example.com

# Frontend domain (e.g., www.example.com)
FRONTEND_DOMAIN=www.example.com

# Backend API domain (e.g., api.example.com)
BACKEND_DOMAIN=api.example.com

# Wildcard domain (e.g., *.example.com)
WILDCARD_DOMAIN=*.example.com

# Full URLs (derived from domains above)
FRONTEND_URL=https://www.example.com
API_URL=https://api.example.com
WS_URL=wss://api.example.com/ws

# ================================
# Backend Configuration
# ================================
# Server binding
SERVER_HOST=0.0.0.0
SERVER_PORT=8080

# SSH host for authentication
SSH_HOST=ssh.example.com

# Logging configuration
RUST_LOG=info,deuseda=debug

# ================================
# Database Configuration
# ================================
# Database credentials
DB_NAME=deuseda_console
DB_USER=deuseda
DB_PASSWORD=CHANGE_ME_SECURE_PASSWORD
DB_HOST=postgres
DB_PORT=5432

# Full database URL
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# ================================
# Authentication & Security
# ================================
# JWT secret key (minimum 64 characters recommended)
JWT_SECRET=CHANGE_ME_SECURE_RANDOM_SECRET_KEY_MIN_64_CHARS

# JWT expiration in seconds (default: 86400 = 24 hours)
JWT_EXPIRATION=86400

# ================================
# GitHub Container Registry
# ================================
CONTAINER_REGISTRY=ghcr.io
GITHUB_ORG=YOUR_GITHUB_USERNAME
GITHUB_REPO=deuseda

# Container image names
BACKEND_IMAGE=${CONTAINER_REGISTRY}/${GITHUB_ORG}/deuseda-backend
FRONTEND_IMAGE=${CONTAINER_REGISTRY}/${GITHUB_ORG}/deuseda-frontend

# ================================
# Kubernetes Configuration
# ================================
# Kubernetes namespace
K8S_NAMESPACE=deuseda

# Resource name prefix (e.g., prod-, staging-)
RESOURCE_NAME_PREFIX=prod-

# Service names (will be prefixed in production)
POSTGRES_SERVICE_NAME=postgres
BACKEND_SERVICE_NAME=backend
FRONTEND_SERVICE_NAME=frontend

# TLS secret names
TLS_SECRET_WILDCARD=deuseda-wildcard-tls
TLS_SECRET_NAKED=deuseda-naked-tls

# Ingress and Kong plugin names
INGRESS_NAME=deuseda-ingress
RATE_LIMIT_PLUGIN_NAME=rate-limiting-deuseda
APEX_INGRESS_NAME=deuseda-apex-redirect
REDIRECT_PLUGIN_NAME=deuseda-redirect-plugin
REDIRECT_SERVICE_NAME=deuseda-redirect-dummy

# ================================
# Cert-Manager Configuration
# ================================
# Certificate issuers
CERT_ISSUER_HTTP01=letsencrypt-prod
CERT_ISSUER_DNS01=letsencrypt-dns01

# ================================
# ArgoCD Configuration
# ================================
# ArgoCD application name
ARGOCD_APP_NAME=deuseda-production

# Git repository URL
ARGOCD_REPO_URL=https://github.com/${GITHUB_ORG}/${GITHUB_REPO}.git

# Target revision (branch/tag)
ARGOCD_TARGET_REVISION=main

# ArgoCD server URL (for CI/CD)
ARGOCD_SERVER=argocd.your-domain.com

# ArgoCD auth token (set in GitHub Secrets)
# ARGOCD_TOKEN=YOUR_ARGOCD_TOKEN

# ================================
# Frontend Build Configuration
# ================================
# API URL for frontend build
VITE_API_BASE_URL=${API_URL}

# WebSocket URL for frontend
VITE_WS_URL=${WS_URL}

# ================================
# Docker Configuration (Development)
# ================================
# Docker Compose service names
POSTGRES_CONTAINER_NAME=deuseda-postgres
BACKEND_CONTAINER_NAME=deuseda-backend
FRONTEND_CONTAINER_NAME=deuseda-frontend
DOCKER_NETWORK_NAME=deuseda-network

# ================================
# Storage Configuration
# ================================
# Kubernetes storage class (e.g., local-path, standard, gp2)
STORAGE_CLASS_NAME=local-path

# ================================
# Deployment Configuration
# ================================
# Environment (development, staging, production)
ENVIRONMENT=production

# Binary name for backend
BINARY_NAME=deuseda

# ================================
# Notes
# ================================
# 1. Never commit .env files with real secrets to git
# 2. Use different secrets for development and production
# 3. Rotate secrets regularly (recommend every 90 days)
# 4. For production, use Kubernetes Secrets or external secret managers
# 5. Minimum password/secret length: 32 characters
# 6. JWT_SECRET should be cryptographically random
