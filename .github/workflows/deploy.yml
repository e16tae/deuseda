name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      packages: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/deuseda-backend
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/deuseda-frontend
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner on backend
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/deuseda-backend:main-${{ steps.vars.outputs.SHORT_SHA }}
          format: 'sarif'
          output: 'trivy-backend-results.sarif'

      - name: Upload backend Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-backend-results.sarif') != ''
        with:
          sarif_file: 'trivy-backend-results.sarif'
          category: 'trivy-backend'

      - name: Run Trivy vulnerability scanner on frontend
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/deuseda-frontend:main-${{ steps.vars.outputs.SHORT_SHA }}
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'

      - name: Upload frontend Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-frontend-results.sarif') != ''
        with:
          sarif_file: 'trivy-frontend-results.sarif'
          category: 'trivy-frontend'

      - name: Update Kubernetes manifests
        run: |
          cd k8s/overlays/production

          # Update image repository if needed (only on first run)
          sed -i "s|ghcr.io/YOUR_GITHUB_USERNAME/deuseda-backend|${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/deuseda-backend|g" kustomization.yaml
          sed -i "s|ghcr.io/YOUR_GITHUB_USERNAME/deuseda-frontend|${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/deuseda-frontend|g" kustomization.yaml

          # Update image tags with SHA
          sed -i "s|newTag: .*|newTag: main-${{ steps.vars.outputs.SHORT_SHA }}|g" kustomization.yaml

          # Show what changed
          git diff kustomization.yaml

      - name: Commit and push updated manifests
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add k8s/overlays/production/kustomization.yaml
          git diff --staged --quiet || git commit -m "Update image tags to main-${{ steps.vars.outputs.SHORT_SHA }}"
          git push
